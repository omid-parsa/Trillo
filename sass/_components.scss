//////////////////////////////////////////////////
//LOGO
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}

//////////////////////////////////////////////////
//SEARCH
.search {
    flex: 0 0 40%;

    display: flex;
    justify-content: center;
    align-items: center;

    @media only screen and (max-width: $bp-smallest) { 
        // 22-step  // parallel with 21, we want to move search bar to the next row or line in a flex box which is a row.  
        order: 1; // we want it to be the last one. we move this to the next line when there is not enough space by setting a property to wrap for the parent which is header.
        flex: 0 0 100%;// we set the height to 100 percent in order to increase the item width exactly at break point and settle it to the next line.        
        background-color: var(--color-grey-light-2);
    }

    &__input {
        font-family: inherit;
        font-size: inherit;
        color: inherit;
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2s;
        margin-right: -3.25rem;

        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }
        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);
        }
    }
    &__input:focus + &__button {
        background-color: var(--color-grey-light-3);
    } 
    &__button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;
        }
        &:active {
            transform: translateY(2px);
        }
    }
    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3);
    }

}

//////////////////////////////////////////////////
//USER NAVIGATION
.user-nav {
    align-self: stretch; // we overwrite this property as we set it in the parent-header- to center. we override it here individually 

    display: flex;
    align-items: center;

    & > * {
        padding: 0 2rem;
        cursor: pointer;
        height: 100%; // we set it to occupy the whole height of the parent
        display: flex; // in order to set the content of the icon box and user class in the center we set flex for them
        align-items: center; // and then set this property. we can do this flex bazi for all elements no matter they have one ite,
    }
    & > *:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box {
        position: relative;
    }
    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);
    }
    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 100px;
        background-color: var(--color-primary);
        color: #fff;
        position: absolute;
        top: 1.5rem;
        right: 1.1rem;

        display: flex;
        justify-content: center;
        align-items: center;
    }
    
    &__user-photo {
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }
    
}
//////////////////////////////////////////////////
// SIDE NAVIGATION
.side-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    @media only screen and (max-width: $bp-medium) {
        display: flex; // 4-step
        margin: 0;  // 4-step
    }

    &__item {
        position: relative;

        &:not(:last-child) {
            margin-bottom: .5rem;

            @media only screen and (max-width: $bp-medium) {
                margin-bottom: 0; // 7-step. remove margin bottom of the nav bar items.
            }
        }

        @media only screen and (max-width: $bp-medium) {
            flex: 1; // 6-step , we want the navigation bar items occupy all the width of the nav bar
        }
    }
    &__item::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0);
        transition: transform .2s,
                    width .4s cubic-bezier(1,0,0,1) .2s,
                    background-color .1s;
    }
    &__item:hover::before,
    &__item--active::before {
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before {
        background-color: var(--color-primary-light);
    }
    &__link:link,
    &__link:visited {
        color: var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem;
        display: flex;
        align-items: center;
        position: relative; //added for z-index
        z-index: 10; // added to be in top of hover effect of the item pseudo before element

        @media only screen and (max-width: $bp-medium) {
            justify-content: center; // 8-step , center the text inside the nav bar items
            padding: 2rem;
        }

        @media only screen and (max-width: $bp-small) { 
            flex-direction: column; // 15-step, in order to put the icon in nav items above the text to fix the shortage of space and breaking line.
            padding: 1.5rem .5rem;// remove some padding
            // there is also another problem in navbar to fix. centering the icon but the problem is about the margin right that we have set for it.
            // so we go there and remove it and then decrease the size of the icon as well.
            // in fact, it is here down
        }
    }
    
    &__icon {
        width: 1.75rem;
        height: 1.75rem;
        margin-right: 2rem;
        fill: currentColor;

        @media only screen and (max-width: $bp-small) { 
            margin-right: 0; // 16-step, there is no element in right after changing the flex direction
            width: 1.5rem;
            height: 1.5rem;
            margin-bottom: .7rem;// add a small margin bottom to make the text and the icon more clear
        }
    }
}
//////////////////////////////////////////////////
// LEGAL TEXT
.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-3);
    text-align: center;
    padding: 2.5rem;

    @media only screen and (max-width: $bp-medium) {
        display: none; // 5-step
    }
}
//////////////////////////////////////////////////
// GALLERY
.gallery {
    display: flex;
    &__photo {
        width: 100%;
        display: block; // we ser this property in order to avoid the white space underneath of the inline blocks that sometimes happens
    }
}
/////////////////////////////////////////////////
// OVERVIEW
.overview {
    display: flex;
    align-items: center; // to center vertically items 
    border-bottom: var(--line);

    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;

        @media only screen and (max-width: $bp-small) { 
            font-size: 1.8rem; // 17-step// decrease the font size of the heading in order to have a better look
            padding: 1.25rem 2rem;
        }
    }
    &__stars {
        display: flex;// to remove white space that svg elements like text naturally have// the parent element has the same size of the children and the parent element which is a flex item by its own also centered vertically in the center.// the flex item by setting the parent to flex will be placed side by side.
        margin-right: auto;// to make an empty space between this elements and elements after this in the flex box
    }
    &__icon--star,
    &__icon--location {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }
    &__location {
        font-size: 1.2rem;
        display: flex;
        align-items: center;
    }
    &__icon--location {
        margin-right: .5rem;
    }
    &__rating {
        background-color: var(--color-primary);
        color: #fff;
        padding: 0 2.25rem;
        margin-left: 3rem;
        align-self: stretch;

        display: flex; // ALL THIS CODE AND BELOW ARE FOR CENTERING THE ITEMS
        flex-direction: column;
        justify-content: center;
        align-items: center;

        @media only screen and (max-width: $bp-small) { 
            padding: 0 1.5rem; // 18-step            
        }
    }
    &__rating--average {
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px;

        @media only screen and (max-width: $bp-small) { 
            font-size: 1.8rem; // 19-step            
        }
    }
    &__rating--count {
        font-size: .8rem;
        text-transform: uppercase;

        @media only screen and (max-width: $bp-small) { 
            font-size: .5rem; // 20-step            
        }
    }
}
/////////////////////////////////////////////////
// BUTTON INLINE
.btn-inline {
    border: none;
    color: var(--color-primary);
    font-size: inherit;// we want to make the font size of the button dependent on the parent element.
    border-bottom: 1px solid currentColor;// currentcolor is for making dependent the border to the color of the text and change it easily in hover effect
    padding-bottom: 2px;
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    & span {
        margin-left: 3px;
        transition: margin-left .2s;
    }

    &:hover {
        color: var(--color-grey-dark-1);

        span {
            margin-left: 8px;
        }
    }
    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}
@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }
    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 2rem rgba(0, 0, 0, .25);
    }
    100% {
        transform: scale(1);
        box-shadow: none;
    }
}
/////////////////////////////////////////////////
// PARAGRAPH
.paragraph:not(:last-of-type) {
    margin-bottom: 2rem;
}
/////////////////////////////////////////////////
// LIST
.list {
    list-style: none;
    margin: 3rem 0;
    padding: 3rem 0;
    border-top: var(--line); //TO CREATE A LINE IN THE TOP OF THE LIST OR ELEMENT
    border-bottom: var(--line); //TO CREATE A LINE IN THE TOP OF THE LIST OR ELEMENT

    display: flex; // in order to create a two column list
    flex-wrap: wrap; // in order to create a two column list

    &__item {
        flex: 0 0 50%; // in order to create a two column list
        margin-bottom: .7rem;
    }
    &__item::before {
        content: "";
        display: inline-block;// if not set we can not see the svg image
        height: 1rem;
        width: 1rem;
        margin-right: .7rem;

        //OLDER BROWSERS
        background-image: url(../img/chevron-thin-right.svg);
        background-size: cover;


        //NEWER BROWSERS - MASKS
        @supports (-webkit-mask-image: url()) or (mask-image: url()) { // it is not supported in mozilla, then the two above line codes will be executed.
            background-color: var(--color-primary); // we set this to be the color that we want to set for our svg icon
            -webkit-mask-image: url(../img/chevron-thin-right.svg);// we see the background color only through the shape of the image and we think that we have change the color of the svg element.
            -webkit-mask-size: cover;
            mask-image: url(../img/chevron-thin-right.svg);// we see the background color only through the shape of the image and we think that we have change the color of the svg element.
            mask-size: cover;
            background-image: none;
        }
        
    }
}
/////////////////////////////////////////////////
// RECOMMEND
.recommend {
    font-size: 1.3rem;
    columns: var(--color-grey-dark-3);

    display: flex;
    // justify-content: space-between; // we can do the same with the margin right for count that are the other element at the same flex box
    align-items: center;


    &__count {
        margin-right: auto;// we could do the same here with the justify content to center.
    }
    &__friends {
        display: flex; // to set the pictures all the time side by side. in fact, this fix has been done to pictures behave well even in smaller screen size. in fact this global fix has been done during the writing media queries.
    }
    &__photo {
        box-sizing: content-box;// since we define the border box for all elements and we don`t want it to be applied here we set it to its initial value
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        border: 3px solid #fff;

        &:not(:last-child) {
            margin-right: -2rem;// in order to overlap photos
        }
    }
}
/////////////////////////////////////////////////
// REVIEWS
.review {
    background-color: #fff;
    box-shadow: var(--shadow-light);
    padding: 3rem;
    margin-bottom: 3.5rem;
    position: relative;
    overflow: hidden;

    @media only screen and (max-width: $bp-medium) {
        padding: 2rem; // 11-step , decrease the white spaces to create more space for contents in small view ports
        margin-bottom: 3rem;
    }

    &__text {
        margin-bottom: 2rem;
        z-index: 10;
        position: relative;// this is only for z index
    }
    &__user {
        display: flex;
        align-items: center;
    }
    &__photo {
        height: 4.5rem;
        width: 4.5rem;
        border-radius: 50%;
        margin-right: 1.5rem;
    }
    &__user-box {
        margin-right: auto;
    }
    &__user-name {
        font-size: 1.1rem;
        font-weight: 600;
        text-transform: uppercase;
        margin-bottom: .4rem;
    }
    &__user-date {
        font-size: 1rem;
        color: var(--color-grey-dark-3);
    }
    &__rating {
        color: var(--color-primary);
        font-size: 2.2rem;
        font-weight: 300;
    }
    &::before {
        content: "\201C";
        position: absolute;
        top: -2.75rem;
        left: -1rem;
        line-height: 1;
        font-size: 20rem;
        color: var(--color-grey-light-2);
        font-family: sans-serif;
        z-index: 1;
    }
}
/////////////////////////////////////////////////
// CALL TO ACTION
.cta {
    padding: 3.5rem 0;
    text-align: center;

    @media only screen and (max-width: $bp-medium) {
        padding: 2.5rem 0; // 12-step , decrease the white spaces to create more space for contents in small view ports
    }

    &__book-now {
        font-size: 2rem;
        font-weight: 300;
        text-transform: uppercase;
        margin-bottom: 2.5rem;
    }
}
/////////////////////////////////////////////////
// BUTTON
.btn {
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    border-radius: 100px;
    border: none;
    background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    color: #fff;
    position: relative;
    overflow: hidden;
    cursor: pointer;

    & > * {
        display: inline-block;// we set this in order to set the padding for the element
        width: 100%;
        height: 100%;
        transition: all .2s;
    }


    &__visible {
        padding: 2rem 7.5rem;
    }
    &__invisible {
        position: absolute;
        padding: 2rem 0;
        left: 0;
        top: -100%;// this is for moving up the element as its height to the top         
    }
    &:hover {
        background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
    }
    &:hover &__invisible  {
        top: 0;        
    }
    &:hover &__visible {
        transform: translateY(100%);
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}